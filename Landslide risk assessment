// Define the study area
var study_area = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level2")
  .filter(ee.Filter.eq('ADM2_NAME', 'Wayanad'));
Map.centerObject(study_area, 10);

// Load DEM data for slope calculation
var dem = ee.Image('USGS/SRTMGL1_003');
var slope = ee.Terrain.slope(dem).clip(study_area);

// Load CHIRPS precipitation data
var chirps = ee.ImageCollection('UCSB-CHG/CHIRPS/DAILY')
  .filterBounds(study_area)
  .filterDate('2023-01-01', '2023-12-31')
  .mean(); // Compute the mean precipitation over the period
var precipitation = chirps.clip(study_area);

// Load MODIS Land Cover data
var landCover = ee.Image('MODIS/006/MCD12Q1/2020_01_01')
  .select('LC_Type1') // Selecting the land cover classification band
  .clip(study_area);

// Define a color palette for land cover classes
var landCoverPalette = [
  'gray', 'green', 'yellow', 'brown', 'blue', 'pink', 'red' // Adjust colors based on your specific dataset
];

// Define visualization parameters for each layer
var slopeVis = {
  min: 0, max: 60, palette: ['white', 'blue', 'green', 'red']
};
var precipitationVis = {
  min:3.5078623056411744, max: 6.778183007240296, palette: ['blue', 'green', 'yellow', 'red']
};
var landCoverVis = {
  min: 0, max: 17, palette: landCoverPalette
};

// Add layers to the map
Map.addLayer(slope, slopeVis, 'Slope');
Map.addLayer(precipitation, precipitationVis, 'Precipitation');
Map.addLayer(landCover, landCoverVis, 'Land Cover');

// Create a landslide risk assessment by combining the factors
// Example weights for each factor (you might want to adjust these based on local knowledge)
var slopeWeight = 0.4;
var precipitationWeight = 0.4;
var landCoverWeight = 0.2;

// Normalize the land cover data to a range of 0 to 1 for combination
var landCoverNorm = landCover.divide(17); // Assuming there are 18 classes (0-17)

// Combine the factors into a single risk score
var riskAssessment = slope.multiply(slopeWeight)
  .add(precipitation.multiply(precipitationWeight))
  .add(landCoverNorm.multiply(landCoverWeight));

// Visualize the landslide risk assessment
Map.addLayer(riskAssessment, {
  min: -2.5409739314846718, max: 9.609841566034849, palette: ['blue', 'green', 'yellow', 'red']
}, 'Landslide Risk Assessment');

// Print risk assessment statistics
print('Landslide Risk Assessment Mean:', riskAssessment.reduceRegion({
  reducer: ee.Reducer.mean(),
  geometry: study_area,
  scale: 30
}));
